{"version":3,"sources":["reducers/TabReducer.js","contexts/TabContext.js","components/TabContent.js","components/TabMenu.js","components/TabContainer.js","App.js","serviceWorker.js","index.js"],"names":["TabReducer","state","action","type","map","tab","counter","id","display","TabContext","createContext","TabContextProvider","props","useReducer","title","content","tabs","dispatch","Provider","value","children","TabContent","className","TabMenu","useContext","useState","setContent","key","onClick","tabIndex","findIndex","updateContent","TabContainer","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"kKAAaA,EAAa,SAACC,EAAOC,GAC9B,OAAOA,EAAOC,MACV,IAAK,iBAED,OADAF,EAAMG,KAAI,SAAAC,GAAG,OAAIH,EAAOI,YAAcJ,EAAOK,GAAKF,EAAIG,SAAWH,EAAIG,QAAUH,EAAIG,SAAU,KACtFP,EACX,QACI,OAAOA,ICHNQ,EAAaC,0BAmFXC,EAjFY,SAACC,GAAW,IAAD,EACXC,qBAAWb,EAAY,CAC1C,CACIc,MAAO,QACPC,QAAQ,yZAIRP,SAAS,EACTD,GAAI,GAER,CACIO,MAAO,QACPC,QAAQ,uQAGRP,SAAS,EACTD,GAAI,GAER,CACIO,MAAO,QACPC,QAAQ,qVAIRP,SAAS,EACTD,GAAI,GAER,CACIO,MAAO,QACPC,QAAQ,gWAIRP,SAAS,EACTD,GAAI,GAER,CACIO,MAAO,QACPC,QAAQ,yZAIRP,SAAS,EACTD,GAAI,GAER,CACIO,MAAO,QACPC,QAAQ,uQAGRP,SAAS,EACTD,GAAI,GAER,CACIO,MAAO,QACPC,QAAQ,qVAIRP,SAAS,EACTD,GAAI,GAER,CACIO,MAAO,QACPC,QAAQ,gWAIRP,SAAS,EACTD,GAAI,KAtEsB,mBAC7BS,EAD6B,KACvBC,EADuB,KA0ElC,OACI,kBAACR,EAAWS,SAAZ,CAAqBC,MAAO,CAACH,OAAMC,aAC9BL,EAAMQ,WCrEJC,EAVI,SAAC,GAAe,IAAdN,EAAa,EAAbA,QACjB,OACI,0BAAMO,UAAU,cACZ,gCACKP,KCgCFQ,EAlCC,WAAO,IAAD,EACMC,qBAAWf,GAA7BO,EADY,EACZA,KAAMC,EADM,EACNA,SADM,EAEWQ,mBAAS,IAFpB,mBAEZV,EAFY,KAEHW,EAFG,KAUlB,OACI,yBAAKJ,UAAU,OACX,wBAAIA,UAAU,0CACTN,EAAKZ,KAAI,SAAAC,GAAQ,IACRS,EAA+BT,EAA/BS,MAAOC,EAAwBV,EAAxBU,QAASP,EAAeH,EAAfG,QAASD,EAAMF,EAANE,GAC/B,OACI,wBAAIe,UAAU,mDAAmDK,IAAKpB,GAClE,4BAAQJ,KAAK,SAASmB,UAAU,MAAMM,QAAS,YAbjD,SAACb,EAASR,GAC5B,IAAMsB,EAAWb,EAAKc,WAAU,SAAAzB,GAAG,OAAIA,EAAIE,KAAOA,KAClDU,EAAS,CAACd,KAAM,iBAAkBI,GAAIsB,EAAUvB,QAAS,IACzDoB,EAAWV,EAAKa,GAAUrB,QAAUO,EAAU,IAU4BgB,CAAchB,EAASR,KACzE,wBAAIe,UAAWd,EAAU,eAAiB,cACrCM,SAOzB,yBAAKQ,UAAU,SACX,kBAAC,EAAD,CAAYP,QAASA,OCpBtBiB,EARM,WACjB,OACI,yBAAKV,UAAU,aACX,kBAAC,EAAD,Q,MCSGW,MAVf,WACE,OACE,yBAAKX,UAAU,kBACb,kBAAC,EAAD,KACE,kBAAC,EAAD,SCGYY,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a","file":"static/js/main.3f6a367b.chunk.js","sourcesContent":["export const TabReducer = (state, action) =>{\r\n    switch(action.type){\r\n        case 'SWITCH_DISPLAY':\r\n            state.map(tab => action.counter++ === action.id ? tab.display = !tab.display : tab.display = false);\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n}","import React, { createContext, useReducer } from 'react';\r\nimport { TabReducer } from '../reducers/TabReducer';\r\n\r\nexport const TabContext = createContext();\r\n\r\nconst TabContextProvider = (props) => {\r\n    let [tabs, dispatch] = useReducer(TabReducer, [\r\n        { \r\n            title: 'Tab-1',\r\n            content: `There was a time when he would have embraced the change that was coming.\r\n            In his youth, he sought adventure and the unknown, but that had been years ago. \r\n            He wished he could go back and learn to find the excitement that came with change but it was useless. \r\n            That curiosity had long left him to where he had come to loathe anything that put him out of his comfort zone.`,\r\n            display: false,\r\n            id: 1\r\n        },\r\n        { \r\n            title: 'Tab-2',\r\n            content: `He heard the crack echo in the late afternoon about a mile away. His \r\n            heart started racing and he bolted into a full sprint. \"It wasn't a gunshot, it wasn't a gunshot,\"\r\n            he repeated under his breathlessness as he continued to sprint.`,\r\n            display: false,\r\n            id: 2 \r\n        },\r\n        { \r\n            title: 'Tab-3',\r\n            content: `A long black shadow slid across the pavement near their feet and the five Venusians,\r\n            very much startled, looked overhead. They were barely in time to see the huge gray form of \r\n            the carnivore before it vanished behind a sign atop a nearby building which bore the mystifying \r\n            information \"Pepsi-Cola.\"`,\r\n            display: false,\r\n            id: 3 \r\n        },\r\n        { \r\n            title: 'Tab-4', \r\n            content: `It seemed like it should have been so simple. There was nothing inherently \r\n            difficult with getting the project done. It was simple and straightforward enough that even a child \r\n            should have been able to complete it on time, but that wasn't the case. The deadline had arrived\r\n            and the project remained unfinished.`,\r\n            display: false,\r\n            id: 4 \r\n        },\r\n        { \r\n            title: 'Tab-5',\r\n            content: `There was a time when he would have embraced the change that was coming.\r\n            In his youth, he sought adventure and the unknown, but that had been years ago. \r\n            He wished he could go back and learn to find the excitement that came with change but it was useless. \r\n            That curiosity had long left him to where he had come to loathe anything that put him out of his comfort zone.`,\r\n            display: false,\r\n            id: 5\r\n        },\r\n        { \r\n            title: 'Tab-6',\r\n            content: `He heard the crack echo in the late afternoon about a mile away. His \r\n            heart started racing and he bolted into a full sprint. \"It wasn't a gunshot, it wasn't a gunshot,\"\r\n            he repeated under his breathlessness as he continued to sprint.`,\r\n            display: false,\r\n            id: 6\r\n        },\r\n        { \r\n            title: 'Tab-7',\r\n            content: `A long black shadow slid across the pavement near their feet and the five Venusians,\r\n            very much startled, looked overhead. They were barely in time to see the huge gray form of \r\n            the carnivore before it vanished behind a sign atop a nearby building which bore the mystifying \r\n            information \"Pepsi-Cola.\"`,\r\n            display: false,\r\n            id: 7\r\n        },\r\n        { \r\n            title: 'Tab-8', \r\n            content: `It seemed like it should have been so simple. There was nothing inherently \r\n            difficult with getting the project done. It was simple and straightforward enough that even a child \r\n            should have been able to complete it on time, but that wasn't the case. The deadline had arrived\r\n            and the project remained unfinished.`,\r\n            display: false,\r\n            id: 8\r\n        }\r\n    ])\r\n\r\n    return ( \r\n        <TabContext.Provider value={{tabs, dispatch}}>\r\n            {props.children}\r\n        </TabContext.Provider>\r\n     );\r\n}\r\n \r\nexport default TabContextProvider;","import React from 'react';\r\n\r\nconst TabContent = ({content}) => {\r\n    return ( \r\n        <span className=\"text-white\">\r\n            <strong>\r\n                {content}\r\n            </strong>\r\n        </span>\r\n     );\r\n}\r\n \r\nexport default TabContent;","import React, { useContext, useState } from 'react';\r\nimport { TabContext } from '../contexts/TabContext';\r\nimport TabContent from './TabContent';\r\n\r\nconst TabMenu = () => {\r\n    const{tabs, dispatch} = useContext(TabContext);\r\n    const[content, setContent] = useState('');\r\n\r\n    const updateContent = (content, id) =>{\r\n        const tabIndex = tabs.findIndex(tab => tab.id === id);\r\n        dispatch({type: 'SWITCH_DISPLAY', id: tabIndex, counter: 0});\r\n        setContent(tabs[tabIndex].display ? content : '');\r\n    }\r\n\r\n    return (\r\n        <div className=\"row\">\r\n            <ul className=\"list-group col-4 border border-primary\">\r\n                {tabs.map(tab => {\r\n                    const{title, content, display, id} = tab;\r\n                    return(\r\n                        <li className=\"list-group-item border border-primary bg-primary\" key={id}>\r\n                            <button type=\"button\" className=\"btn\" onClick={() => {updateContent(content, id)}}>\r\n                                <h6 className={display ? 'text-warning' : 'text-white'}>\r\n                                    {title}\r\n                                </h6>\r\n                            </button>\r\n                        </li>\r\n                    );\r\n                })}\r\n            </ul>\r\n            <div className=\"col-8\">\r\n                <TabContent content={content}/> \r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default TabMenu;","import React from 'react';\r\nimport TabMenu from './TabMenu';\r\n\r\nconst TabContainer = () => {\r\n    return ( \r\n        <div className=\"container\">\r\n            <TabMenu />\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default TabContainer;","import React from 'react';\r\nimport TabContextProvider from './contexts/TabContext';\r\nimport TabContainer from './components/TabContainer';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App bg-primary\">\r\n      <TabContextProvider>\r\n        <TabContainer />\r\n      </TabContextProvider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}